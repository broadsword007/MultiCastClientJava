/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package testmulticastclient;

import java.io.IOException;
import java.net.Socket;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author ferhan
 */
public class ClientGUI extends javax.swing.JFrame {

    /**
     * Creates new form ClientGUI
     */
    public ClientGUI(ConnectionManager conManagerVal) {
        conManager= conManagerVal;
        initComponents();
        messageTextArea.setEditable(false);
        new ConnectionStatusUpdateder().start();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        messageTextArea = new javax.swing.JTextArea();
        connectionStatusLabel = new javax.swing.JLabel();
        messageTextEdit = new javax.swing.JTextField();
        sendMessageButton = new javax.swing.JButton();
        disconnectButton = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        messageTextArea.setColumns(20);
        messageTextArea.setRows(5);
        jScrollPane1.setViewportView(messageTextArea);
        messageTextArea.getAccessibleContext().setAccessibleName("messageTextArea");

        connectionStatusLabel.setText("Unknown");

        messageTextEdit.setToolTipText("Enter message here");

        sendMessageButton.setText("Send");
        sendMessageButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendMessageButtonMouseClicked(evt);
            }
        });

        disconnectButton.setText("Disconnect");
        disconnectButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                disconnectButtonMouseClicked(evt);
            }
        });

        jLabel2.setText("Connection Status :");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addComponent(disconnectButton)
                            .addComponent(jScrollPane1))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(messageTextEdit)
                        .addGap(18, 18, 18)
                        .addComponent(sendMessageButton)
                        .addGap(12, 12, 12))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(277, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(connectionStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connectionStatusLabel)
                    .addComponent(jLabel2))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageTextEdit, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(sendMessageButton))
                .addGap(18, 18, 18)
                .addComponent(disconnectButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        connectionStatusLabel.getAccessibleContext().setAccessibleName("connectionStatusLabel");
        messageTextEdit.getAccessibleContext().setAccessibleName("messageTextField");
        sendMessageButton.getAccessibleContext().setAccessibleName("messageSendButton");
        disconnectButton.getAccessibleContext().setAccessibleName("disconnectButton");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendMessageButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMessageButtonMouseClicked
        // TODO add your handling code here:
        System.out.println("Sent button clicked");
        try 
        {
            conManager.sendMessage(messageTextEdit.getText());
        } 
        catch (IOException ex) 
        {
            Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sendMessageButtonMouseClicked

    private void disconnectButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_disconnectButtonMouseClicked
        // TODO add your handling code here:
        System.out.println("Disconnect button clicked");
    }//GEN-LAST:event_disconnectButtonMouseClicked

    public void addTextToTextArea(String text)
    {
        messageTextArea.setText(messageTextArea.getText()+"\n\n"+text);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel connectionStatusLabel;
    private javax.swing.JButton disconnectButton;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea messageTextArea;
    private javax.swing.JTextField messageTextEdit;
    private javax.swing.JButton sendMessageButton;
    // End of variables declaration//GEN-END:variables
    private ConnectionManager conManager; // The socket on this the client will comminicate with server
    class ConnectionStatusUpdateder extends Thread
    {
        @Override
        public void run()
        {
            while(true)
            {
                if(conManager.connected)
                {
                    connectionStatusLabel.setText("Connected");
                }
                else
                {
                    connectionStatusLabel.setText("Disconnected");
                }
                try {
                    sleep(5000);
                } catch (InterruptedException ex) {
                    Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
}
